stages:
  - test
  - deploy

variables:
  NODE_ENV: 'development'
  ANGULAR_CLI_VERSION: '18.2.9'
  NPM_CACHE_DIR: '$CI_PROJECT_DIR/.npm'
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

cache:
  paths:
    - .npm
    - dist/
    - node_modules/

before_script:
  - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
  - apt-get update
  - apt-get install -y google-chrome-stable xvfb
  - npm config set cache $NPM_CACHE_DIR --global
  - npm install -g @angular/cli@$ANGULAR_CLI_VERSION

run_tests:
  stage: test
  image: node:20
  script:
    - npm install -force
    - npm run build
    - npm run test
  artifacts:
    reports:
      junit: test-results.xml
    paths:
      - node_modules/
      - dist/
      - coverage/
  only:
    - main
    - develop
    - merge_requests

deploy:
  stage: deploy
  image: node:20
  script:
    - echo "Deploying to production server..."
    # Here you can add the commands to deploy your application
  only:
    - main
sonarcloud-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - develop
